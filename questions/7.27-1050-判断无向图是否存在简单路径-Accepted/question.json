{
  "id": 63,
  "tags": [
    "图"
  ],
  "created_by": {
    "id": 1,
    "username": "admin",
    "real_name": null
  },
  "template": {},
  "_id": "1050",
  "title": "7.27-判断无向图是否存在简单路径",
  "description": "<p style=\"margin-left: 0px;\">采用邻接表存储结构，编写一个判别无向图中任意给定的两个顶点之间是否存在一条长度为k的简单路径的算法。</p><p>注：一条路径为简单路径指的是其顶点序列中不含有重现的顶点</p>",
  "input_description": "<p style=\"margin-left: 0px;\">第一行为顶点个数和k，用逗号分隔</p><p>第二行为起点和终点</p><p>第三行为图中的边</p>",
  "output_description": "<p><span style=\"color: rgb(51, 51, 51);\">输出是否存在满足条件的简单回路，存在输出yes，不存在输出no</span><br /></p>",
  "samples": [
    {
      "input": "4,4\n1,4\n1-2,2-3,3-4,4-2,1-3\n",
      "output": "no"
    },
    {
      "input": "4,2\n1,4\n1-2,2-3,3-1,2-4\n",
      "output": "yes\n"
    }
  ],
  "hint": "",
  "languages": [
    "C",
    "C++",
    "Golang",
    "Java",
    "JavaScript",
    "Python2",
    "Python3"
  ],
  "create_time": "2023-07-21T07:51:03.993903Z",
  "last_update_time": null,
  "time_limit": 1000,
  "memory_limit": 256,
  "io_mode": {
    "input": "input.txt",
    "output": "output.txt",
    "io_mode": "Standard IO"
  },
  "spj": false,
  "spj_language": null,
  "rule_type": "ACM",
  "difficulty": "Low",
  "source": "",
  "total_score": 0,
  "submission_number": 135,
  "accepted_number": 92,
  "statistic_info": {
    "0": 92,
    "4": 4,
    "-1": 22,
    "-2": 17
  },
  "share_submission": false,
  "contest": null,
  "my_status": null
}